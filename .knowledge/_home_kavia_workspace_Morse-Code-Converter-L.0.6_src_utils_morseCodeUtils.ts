{"is_source_file": true, "format": "TypeScript", "description": "Utility functions and constants for Morse code conversion, including a mapping of characters to Morse code, and functions to convert text to Morse code and vice versa.", "external_files": [], "external_methods": [], "published": ["textToMorse", "morseToText", "isValidMorseCode", "isValidText"], "classes": [], "methods": [{"name": "textToMorse", "description": "Converts text to Morse code."}, {"name": "morseToText", "description": "Converts Morse code to text."}, {"name": "isValidMorseCode", "description": "Validates if the input string is valid Morse code."}, {"name": "isValidText", "description": "Validates if the input string contains only valid characters that can be converted to Morse code."}], "calls": [], "search-terms": ["MORSE_CODE_MAP", "textToMorse", "morseToText"], "state": 2, "ctags": ["MORSE_CODE_MAP: /^const MORSE_CODE_MAP: MorseCodeMap = {$/;\"", "MorseCodeMap: /^type MorseCodeMap = {$/;\"", "isValidMorseCode: /^export function isValidMorseCode(input: string): boolean {$/;\"", "isValidText: /^export function isValidText(input: string): boolean {$/;\"", "morseToText: /^export const morseToText = (morse: string): string => {$/;\"", "textToMorse: /^export const textToMorse = (text: string): string => {$/;\"", "validMorseChars: /^  const validMorseChars = new Set(['.', '-', ' ']);$/;\""], "filename": "/home/kavia/workspace/Morse-Code-Converter-L.0.6/src/utils/morseCodeUtils.ts", "hash": "8938a210c569c12f1a56e30c89f2762b", "format-version": 3, "code-base-name": "default"}